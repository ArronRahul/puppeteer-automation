name: Puppeteer

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      # Step to check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step to set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Step to install system dependencies required for Puppeteer
      - name: Install system dependencies for Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libxss1 \
            libgconf-2-4 \
            libgtk-3-0 \
            libx11-xcb1 \
            libdbus-glib-1-2 \
            libxtst6 \
            fonts-liberation \
            libappindicator3-1 \
            libasound2

      # Step to install Node.js project dependencies
      - name: Install dependencies
        run: npm install

      # Step to set the TARGET_DATE environment variable
      - name: Set TARGET_DATE
        run: echo "CURRENT_DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV

      # Step to run the Puppeteer tests
      - name: Run Puppeteer tests
        env:  # Define environment variables here
          USERNAME1: ${{ secrets.USERNAME1 }}  # Reference the secret
          PASSWORD: ${{ secrets.PASSWORD }}      # Reference the secret
          PIN: ${{ secrets.PIN }} 
          TARGET_DATE: ${{ env.CURRENT_DATE }}  # Pass the CURRENT_DATE to TARGET_DATE
        run: |
          set -e  # Stop the script on error
          node src/tests/main.js  # Specify your Puppeteer test file

      # Step to check if the tests failed and log a message
      - name: Check test results
        if: ${{ failure() }}
        run: echo "Tests failed. Check the logs for details."

      # Step to log a success message if tests passed
      - name: Success Message
        if: ${{ success() }}
        run: echo "All tests passed successfully!"

      # Optional notification step for failed tests
      - name: Notify Failure (Optional)
        if: ${{ failure() }}
        run: |
          echo "Notifying failure through email or any other service..."
          # You can integrate your notification logic here if needed
